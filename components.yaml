apiVersion: v1
kind: ServiceAccount
metadata:
  name: astra-fullbackup
  namespace: neptune-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: astra-fullbackup
rules:
- apiGroups: ["management.astra.netapp.io"]
  resources: ["*"]
  verbs: ["*"]
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["get", "watch", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: astra-fullbackup
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: astra-fullbackup
subjects:
- kind: ServiceAccount
  name: astra-fullbackup
  namespace: neptune-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: astra-fullbackup
  namespace: neptune-system
  labels:
    app: astra-fullbackup
spec:
  replicas: 1
  selector:
    matchLabels:
      app: astra-fullbackup
  template:
    metadata:
      labels:
        app: astra-fullbackup
    spec:
      serviceAccountName: astra-fullbackup
      containers:
      - name: alpine-astra-backup
        image: alpine:latest
        env:
          - name: KUBECTL_VERSION
            value: "1.26.11"
          - name: ACTOOLKIT_VERSION
            value: "3.0.0a6"
          - name: IGNORE_NAMESPACES
            value: "astra-connector-operator,gmp-public,gmp-system,kube-node-lease,kube-public,kube-system,neptune-system,trident"
        command: ["/bin/sh"]
        args:
        - -c
        - >
          apk add py3-pip curl &&
          python3 -m pip install --upgrade pip &&
          python3 -m pip install actoolkit==$ACTOOLKIT_VERSION &&
          curl -sLO https://storage.googleapis.com/kubernetes-release/release/v${KUBECTL_VERSION}/bin/linux/amd64/kubectl &&
          mv kubectl /usr/bin/kubectl &&
          curl -sLO https://raw.githubusercontent.com/MichaelHaigh/astra-fullcluster-backup/main/protectCluster.py &&
          chmod +x /usr/bin/kubectl &&
          trap : TERM INT; sleep infinity & wait
